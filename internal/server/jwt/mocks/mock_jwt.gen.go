// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/jwt/jwt.go

// Package jwt_mocks is a generated GoMock package.
package jwt_mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/pinbrain/gophkeeper/internal/model"
	jwt "github.com/pinbrain/gophkeeper/internal/server/jwt"
)

// MockServiceI is a mock of ServiceI interface.
type MockServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockServiceIMockRecorder
}

// MockServiceIMockRecorder is the mock recorder for MockServiceI.
type MockServiceIMockRecorder struct {
	mock *MockServiceI
}

// NewMockServiceI creates a new mock instance.
func NewMockServiceI(ctrl *gomock.Controller) *MockServiceI {
	mock := &MockServiceI{ctrl: ctrl}
	mock.recorder = &MockServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceI) EXPECT() *MockServiceIMockRecorder {
	return m.recorder
}

// BuildJWTSting mocks base method.
func (m *MockServiceI) BuildJWTSting(user *model.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildJWTSting", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuildJWTSting indicates an expected call of BuildJWTSting.
func (mr *MockServiceIMockRecorder) BuildJWTSting(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildJWTSting", reflect.TypeOf((*MockServiceI)(nil).BuildJWTSting), user)
}

// GetJWTClaims mocks base method.
func (m *MockServiceI) GetJWTClaims(tokenString string) (*jwt.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJWTClaims", tokenString)
	ret0, _ := ret[0].(*jwt.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJWTClaims indicates an expected call of GetJWTClaims.
func (mr *MockServiceIMockRecorder) GetJWTClaims(tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJWTClaims", reflect.TypeOf((*MockServiceI)(nil).GetJWTClaims), tokenString)
}

// GetMdJWTKey mocks base method.
func (m *MockServiceI) GetMdJWTKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMdJWTKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMdJWTKey indicates an expected call of GetMdJWTKey.
func (mr *MockServiceIMockRecorder) GetMdJWTKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMdJWTKey", reflect.TypeOf((*MockServiceI)(nil).GetMdJWTKey))
}
